// <auto-generated />
using System;
using Core_NewSolutions.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Core_NewSolutions.Migrations
{
    [DbContext(typeof(NewSolutionsContext))]
    [Migration("20210805152512_init_blog_3")]
    partial class init_blog_3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Arabic_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core_NewSolutions.Models.AboutSection1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("DetailsBold")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details_bold");

                    b.Property<string>("DetailsRegular")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details_regular");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("video_link");

                    b.HasKey("Id");

                    b.ToTable("about_section1", "about");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.AboutSection2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("SmallTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title1");

                    b.Property<string>("SmallTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title2");

                    b.HasKey("Id");

                    b.ToTable("about_section2", "about");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.AboutSection3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("about_section3", "about");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.Blogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("facebook_url");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_url");

                    b.Property<string>("InstegramUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instegram_url");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job_title");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("linked_in_url");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("twitter_url");

                    b.HasKey("Id");

                    b.ToTable("clients", "clients");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.ClientImgUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdNavigation")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("Client_Img_Url", "clients");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.ClientsSection1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("clients_section1", "clients");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.ContactsSection1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("contacts_section1", "contacts");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.ContactsSocialMedium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("facebook_url");

                    b.Property<string>("InstegramUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instegram_url");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("linked_in_url");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("twitter_url");

                    b.HasKey("Id");

                    b.ToTable("contacts_social_media", "contacts");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("facebook_url");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_url");

                    b.Property<string>("InstegramUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instegram_url");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job_title");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("linked_in_url");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("twitter_url");

                    b.HasKey("Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.EmployeeImgUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdNavigation")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("Employee_Img_Url");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section1", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section2", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short?>("ActiveClients")
                        .HasColumnType("smallint")
                        .HasColumnName("active_clients");

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<short?>("GloriousYears")
                        .HasColumnType("smallint")
                        .HasColumnName("glorious_years");

                    b.Property<short?>("ProjectsDone")
                        .HasColumnType("smallint")
                        .HasColumnName("projects_done");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.Property<short?>("TeamAdvisors")
                        .HasColumnType("smallint")
                        .HasColumnName("team_advisors");

                    b.HasKey("Id");

                    b.ToTable("home_section3", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section4", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection4Card1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardDetails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_details");

                    b.Property<string>("CardFooter1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer1");

                    b.Property<string>("CardFooter2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer2");

                    b.Property<string>("CardFooter3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer3");

                    b.Property<string>("CardTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_title");

                    b.HasKey("Id");

                    b.ToTable("home_section4_card1", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection4Card2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardDetails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_details");

                    b.Property<string>("CardFooter1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer1");

                    b.Property<string>("CardFooter2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer2");

                    b.Property<string>("CardFooter3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer3");

                    b.Property<string>("CardTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_title");

                    b.HasKey("Id");

                    b.ToTable("home_section4_card2", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection4Card3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardDetails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_details");

                    b.Property<string>("CardFooter1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer1");

                    b.Property<string>("CardFooter2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer2");

                    b.Property<string>("CardFooter3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_footer3");

                    b.Property<string>("CardTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card_title");

                    b.HasKey("Id");

                    b.ToTable("home_section4_card3", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section5", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section6", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section7", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection7Slider1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section7_slider1", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.HomeSection7Slider2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("home_section7_slider2", "home");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.ProjectImgUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNavigation")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("Project_Img_Url", "projects");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.ProjectsSection1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title1");

                    b.Property<string>("BigTitle2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_title2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_title");

                    b.HasKey("Id");

                    b.ToTable("projects_section1", "projects");
                });

            modelBuilder.Entity("Core_NewSolutions.Models.UploadProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BigTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("big_Title");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_url");

                    b.Property<string>("SmallTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("small_Title");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("upload_project", "projects");
                });

            modelBuilder.Entity("Core_NewSolutions.ViewModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Core_NewSolutions.ViewModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Core_NewSolutions.ViewModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core_NewSolutions.ViewModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Core_NewSolutions.ViewModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
